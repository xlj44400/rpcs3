trigger:
  branches:
    include:
      - master
  tags:
    exclude:
      - '*'
pr: none
jobs:

- job: Windows_Build
  variables:
    COMPILER: msvc
    QT_VER_MAIN: '5'
    QT_VER: '5.15.2'
    QT_VER_MSVC: 'msvc2019'
    QT_DATE: '202011130602'
    QTDIR: C:\Qt\$(QT_VER)\$(QT_VER_MSVC)_64
    VULKAN_VER: '1.2.182.0'
    VULKAN_SDK_SHA: '7089d48011f06c4a02a593913c6a9385d1652ab7765c25d2666d5d6ef4e24af8'
    VULKAN_SDK: C:\VulkanSDK\$(VULKAN_VER)
    CACHE_DIR: ./cache
    UPLOAD_COMMIT_HASH: 7d09e3be30805911226241afbb14f8cdc2eb054e
    UPLOAD_REPO_FULL_NAME: "RPCS3/rpcs3-binaries-win"

  pool:
    name: "az2021"

  steps:
    - bash: .ci/get_keys-windows.sh
      displayName: Get Cache Keys

    - task: Cache@2
      inputs:
        key: $(Agent.OS) | $(COMPILER) | "$(QT_VER)" | $(VULKAN_SDK_SHA) | llvm.lock | glslang.lock
        path: $(CACHE_DIR)
        restoreKeys: |
          $(Agent.OS) | $(COMPILER)
      displayName: Cache

    - bash: .ci/setup-windows.sh
      displayName: Download and unpack dependencies

    - bash: .ci/export-azure-vars.sh
      displayName: Export Variables

    - task: MSBuild@1
      inputs:
        solution: './3rdparty/SPIRV/spirv.vcxproj'
        maximumCpuCount: true
        platform: x64
        configuration: 'Release'
      displayName: Compile SPIRV-Tools

    - task: VSBuild@1
      inputs:
        solution: 'rpcs3.sln'
        maximumCpuCount: true
        platform: x64
        configuration: 'Release'
      displayName: Compile RPCS3

    - bash: .ci/deploy-windows.sh
      displayName: Pack up build artifacts

    - publish: $(Build.ArtifactStagingDirectory)
      condition: succeeded()
      artifact: RPCS3 for Windows

    # - bash: .ci/github-upload.sh
    #   condition: and(ne(variables['Build.Reason'], 'PullRequest'), eq(variables['Build.Repository.Name'], 'RPCS3/rpcs3'), eq(variables['Build.SourceBranch'], 'refs/heads/master'))
    #   displayName: Push build to GitHub
    #   env:
    #     RPCS3_TOKEN: $(RPCS3-Token)
